<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="junitreport" name="Finalproject" xmlns:jacoco="antlib:org.jacoco.ant">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="jacoco.output.dir" value="jacoco"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    	<classpath path="lib/jacocoant.jar"/>
    </taskdef>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="../../../.p2/pool/plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="../../../.p2/pool/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="Finalproject.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/jacocoant.jar"/>
        <pathelement location="lib/jtidy-r938.jar"/>
        <pathelement location="lib/system-rules-1.16.0.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Finalproject.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target depends="build" name="AllTests">
    	<mkdir dir="${jacoco.output.dir}"/>
        <jacoco:coverage>
	        
	        <junit fork="yes" printsummary="withOutAndErr">
	            <formatter type="xml"/>
	            <test name="test.AllTests" todir="${junit.output.dir}"/>
	            <jvmarg line="-ea"/>
	            <classpath refid="Finalproject.classpath"/>
	        </junit>
	    </jacoco:coverage>
    </target>
    <target name="CLITest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.CLITest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Finalproject.classpath"/>
        </junit>
    </target>
    <target name="CLITest.testCLI">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.CLITest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Finalproject.classpath"/>
        </junit>
    </target>
    <target name="MDConverterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.MDConverterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Finalproject.classpath"/>
        </junit>
    </target>
    <target depends="AllTests" name="junitreport">
        <mkdir dir="${junit.output.dir}/classes"/>
		<jacoco:report>
		                        
		    <executiondata>
		        <file file="jacoco.exec"/>
		    </executiondata>
		                        
		    <structure name="FinalProject">
		        <classfiles>
		            <fileset dir="bin"/>
		        </classfiles>
		        <sourcefiles encoding="UTF-8">
		            <fileset dir="src"/>
		        </sourcefiles>
		    </structure>
		                        
		    <html destdir="report"/>
		                        
		</jacoco:report>
 
    </target>
</project>
